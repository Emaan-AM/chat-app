version: "3.8"

services:
  db:
    image: postgres:15
    container_name: chatapp_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - chatnet

  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: chatapp_backend
    entrypoint: ["sh", "/usr/src/chat-app/entrypoint.sh"]
    env_file:
      - .env
    volumes:
      - "./services/backend:/usr/src/chat-app"
    ports:
      - "5004:5000"
    environment:
      FLASK_ENV: development
      APP_SETTINGS: app.config.DevelopmentConfig
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - db
    networks:
      - chatnet

  websocket:
    build:
      context: ./services/websocket
      dockerfile: Dockerfile
    container_name: chatapp_websocket
    entrypoint: ["sh", "/usr/src/chat-app/entrypoint_socket.sh"]
    env_file:
      - .env
    volumes:
      - "./services/websocket:/usr/src/chat-app"
    ports:
      - "5001:5001"
    environment:
      FLASK_ENV: development
      APP_SETTINGS: app.config_socket.DevelopmentConfig
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - db
    networks:
      - chatnet

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: chatapp_frontend
    env_file:
      - ./services/frontend/.env
    volumes:
      - "./services/frontend:/usr/src/chat-app"
      - "/usr/src/chat-app/node_modules"
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - websocket
    networks:
      - chatnet

volumes:
  db_data:

networks:
  chatnet:

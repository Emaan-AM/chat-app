name: ChatApp CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: chatdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: verysecurepassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d chatdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd services/backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Install frontend dependencies
        run: |
          cd services/frontend
          npm install

      - name: Backend lint
        run: |
          cd services/backend
          flake8 .

      - name: Frontend lint
        run: |
          cd services/frontend
          npx eslint .

      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:verysecurepassword@localhost:5432/chatdb
          BACKEND_APP_SETTINGS: app.config.DevelopmentConfig
          SECRET_KEY: topsecretkey123
          PYTHONPATH: ./services/backend
        run: |
          cd services/backend
          pytest tests -v

      - name: Run frontend tests
        run: |
          cd services/frontend
          npm test -- --watchAll=false

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          docker-compose -f docker-compose.yml push
